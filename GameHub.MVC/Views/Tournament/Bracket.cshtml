@model EditScoreViewModel

@{
    ViewData["Title"] = "Bracket";
}

<h1>Drabinka</h1>

@if (Model.Matches != null && Model.Matches.Any())
{
    @foreach (var matchGroup in Model.Matches.GroupBy(m => m.RoundId))
    {
        <div class="round">
            <h2>Runda @matchGroup.Key</h2>
            <div class="matches">
                    @foreach (var match in matchGroup)
                    {
                    <div class="match">
                        <form asp-controller="Tournament" asp-action="Bracket">
                            <div class="team">@match.Id</div>
                            <input asp-for="@Model.MatchForm.Team1Id" type="hidden" value="@match.Team1Id" />
                            <input asp-for="@Model.MatchForm.Team2Id" type="hidden" value="@match.Team2Id" />
                            <input asp-for="@Model.MatchForm.Team1Score" type="text" placeholder="Wynik: @match.Team1Id" />
                            <span>vs</span>
                            <input asp-for="@Model.MatchForm.Team2Score" type="text" placeholder="Wynik: @match.Team2Id" />
                            <input asp-for="@Model.MatchForm.Id" type="hidden" value="@match.Id" />
                            <input type="hidden" name="EncodedName" value="@Model.Tournament.EncodedName" />
                            <button type="submit" class="btn btn-primary">Zapisz wynik</button>
                         </form>
                    </div>
                    }
            </div>
        </div>
    }
}
else
{
    <p>Brak meczów w turnieju</p>
}

<div>
    <a asp-action="Index">Powrót do listy</a>
</div>
